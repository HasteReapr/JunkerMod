<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Configurations>Release;Debug</Configurations>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <LangVersion>7.3</LangVersion>
    <Optimize>True</Optimize>
  </PropertyGroup>

  <ItemGroup>
    <None Remove=".gitignore" />
    <None Remove="nuget.config" />
  </ItemGroup>

	<ItemGroup>
		<PackageReference Include="BepInEx.Analyzers" Version="1.0.*">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="BepInEx.Core" Version="5.4.*" />
		<PackageReference Include="RiskOfRain2.GameLibs" Version="1.2.4-r.0" />
		<PackageReference Include="UnityEngine.Modules" Version="2019.4.26" />
		<PackageReference Include="MMHOOK.RoR2" Version="2022.9.20">
			<NoWarn>NU1701</NoWarn>
		</PackageReference>
		<PackageReference Include="R2API.Core" Version="5.*" />
		<PackageReference Include="R2API.Prefab" Version="1.*" />
		<PackageReference Include="R2API.RecalculateStats" Version="1.*" />
		<PackageReference Include="R2API.Language" Version="1.*" />
		<PackageReference Include="R2API.Sound" Version="1.*" />
	</ItemGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="if &quot;$(Username)&quot; == &quot;Bee Snow&quot; set build=true&#xD;&#xA;&#xD;&#xA;if defined build (&#xD;&#xA;&#xD;&#xA;REM copy the built mod to our Build folder&#xD;&#xA;copy &quot;$(TargetPath)&quot; &quot;$(ProjectDir)..\Build\plugins&quot;&#xD;&#xA;copy &quot;$(TargetPath)&quot; &quot;$(ProjectDir)..\JunkerMod\NetworkWeaver&quot;&#xD;&#xA;copy &quot;C:\Users\Bee_Snow\source\repos\JunkerMod\JunkerMod\bin\Debug\netstandard2.0&quot; &quot;C:\Users\Bee_Snow\source\repos\JunkerMod\JunkerMod\Build&quot;&#xD;&#xA;&#xD;&#xA;REM We store the output from robocopy in a file called robocopy which we'll delete at the end of the file.&#xD;&#xA;robocopy $(TargetDir) $(ProjectDir)\NetworkWeaver $(TargetFileName) &gt; $(TargetDir)Robocopy&#xD;&#xA;&#xD;&#xA;REM Then we navigate our script to the NetworkWeaver folder to make the follow up line less verbose.&#xD;&#xA;cd $(ProjectDir)..\JunkerMod\NetworkWeaver&#xD;&#xA;&#xD;&#xA;REM Unity.UNetWeaver.exe {path to Coremodule} {Path to Networking} {Path to output folder} {Path to the dll you want patched} {Path to all needed references for the to-be-patched dll}&#xD;&#xA;Unity.UNetWeaver.exe &quot;..\libs\UnityEngine.CoreModule.dll&quot; &quot;..\libs\com.unity.multiplayer-hlapi.Runtime.dll&quot; &quot;Patched/&quot;  $(TargetFileName) &quot;$(ProjectDir)\libs&quot;&#xD;&#xA;&#xD;&#xA;REM We store the prepatched dll disabled as a .prepatch so that you can check it if you want, but first we need to make sure that file doesn't exist already.&#xD;&#xA;IF EXIST $(TargetFileName).prepatch (&#xD;&#xA;DEL /F $(TargetFileName).prepatch&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;REM Then we rename the prepatched file to bla.dll.prepatch&#xD;&#xA;ren $(TargetFileName) $(TargetFileName).prepatch&#xD;&#xA;&#xD;&#xA;REM move our script to the Patched Folder&#xD;&#xA;cd Patched&#xD;&#xA;&#xD;&#xA;REM move from the current directory (.) to the projectDirectory and store the output once more to the Robocopy file.&#xD;&#xA;robocopy . $(ProjectDir)  $(TargetFileName) &gt; $(TargetDir)Robocopy&#xD;&#xA;&#xD;&#xA;REM Remove the patched file from the Patched folder, because the Weaver won't run if the file already exists.&#xD;&#xA;del  $(TargetFileName)&#xD;&#xA;&#xD;&#xA;REM Delete the holder for all robocopy output.&#xD;&#xA;del $(TargetDir)Robocopy&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;REM copy the assetbundle from our unity project to our Build folder&#xD;&#xA;REM change these paths to your (now hopefully renamed) folders&#xD;&#xA;if exist &quot;$(ProjectDir)..\JunkerMod\queen_assets&quot; (&#xD;&#xA;copy &quot;$(ProjectDir)..\JunkerMod\queen_assets&quot; &quot;$(ProjectDir)..\Build\plugins\AssetBundles&quot;&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;REM copy the whole Build\plugins folder into your r2modman profile. This mimics how r2modman will install your mod&#xD;&#xA;Xcopy /E /I /Y &quot;$(ProjectDir)..\Build\plugins&quot; &quot;E:\r2Profiles\Blinx Returns\BepInEx\plugins\rob-henrymod\&quot;&#xD;&#xA;)" />
  </Target>

</Project>
